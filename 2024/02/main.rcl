let lines = [
  for line in std.read_file_utf8("input.txt").split_lines():
  line.split(" ").map(x => x.parse_int())
];

let abs = x => if x < 0: -x else: x;

let is_safe = cells =>
  let ds = [for i in std.range(1, cells.len()): cells[i] - cells[i - 1]];
  // Count the number of unique signs of the differences, if they are all
  // increasing or decreasing, there is only one.
  let signs = {for d in ds: (if d < 0: -1 else: 1)};
  let range_ok = {for d in ds: let a = abs(d); (a >= 1) and (a <= 3)};
  (signs.len() == 1) and (not range_ok.contains(false));

let is_safe_damped = cells =>
  let subranges = [
    for i in std.range(0, cells.len()): [
      for j in std.range(0, cells.len()): if i != j: cells[j]
    ]
  ];
  // The report is safe if any subreport is safe.
  subranges.map(is_safe).contains(true);

{
  part1 = lines.map(is_safe).filter(x => x).len(),
  part2 = lines.map(is_safe_damped).filter(x => x).len(),
}
